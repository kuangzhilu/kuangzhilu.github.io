<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://kuangzhilu.github.io</id>
    <title>Monkey</title>
    <updated>2023-03-11T06:53:28.788Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://kuangzhilu.github.io"/>
    <link rel="self" href="https://kuangzhilu.github.io/atom.xml"/>
    <subtitle>温故而知新</subtitle>
    <logo>https://kuangzhilu.github.io/images/avatar.png</logo>
    <icon>https://kuangzhilu.github.io/favicon.ico</icon>
    <rights>All rights reserved 2023, Monkey</rights>
    <entry>
        <title type="html"><![CDATA[CloudNative]]></title>
        <id>https://kuangzhilu.github.io/post/test/</id>
        <link href="https://kuangzhilu.github.io/post/test/">
        </link>
        <updated>2023-03-10T16:12:55.000Z</updated>
        <summary type="html"><![CDATA[<h2 id="安装helm">安装Helm</h2>
<h3 id="安装kubectl">安装kubectl</h3>
<p>下载kubectl工具</p>
<pre><code class="language-shell">curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.4/bin/linux/amd64/kubectl
</code></pre>
<p>安装kubectl工具</p>
<pre><code class="language-shell">chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl
kubectl version
</code></pre>
<p>配置 Kubeconfig</p>
<pre><code class="language-shell">将kubeconfig配置保存到~/.kube/config
export KUBECONFIG=~/.kube/config
kubectl config get-contexts
kubectl get node
</code></pre>
<p>安装helm</p>
<pre><code>https://helm.sh/docs/intro/install/
mv helm /usr/local/bin/helm
</code></pre>
<p>测试helm</p>
<pre><code class="language-shell">helm list
</code></pre>
<h2 id="基础使用">基础使用</h2>
<pre><code>实用命令操作参考文档
https://www.cnblogs.com/hahaha111122222/p/16113138.html
</code></pre>
<pre><code class="language-shell">helm install my-spinnaker opsmx/spinnaker -n spinnaker -f values.yaml 

helm fetch stable/nfs-client-provisioner

helm install nfs-client-provisioner nfs-client-provisioner-1.2.11.tgz
#搜索仓库所有charts
helm search repo argo
#拉取chart
helm pull argo/argo-cd
#指定版本
helm install adwerx/awx --version 1.0.0

#卸载并保留一些数据
helm uninstall harbor -n harbor --keep-history
</code></pre>
<h3 id="更新spinnaker">更新spinnaker</h3>
<p>helm upgrade --values values.yaml --install my-spinnaker opsmx/spinnaker -n spinnaker</p>
<h3 id="删除spinnaker">删除spinnaker</h3>
<p>helm delete --purge my-spinnaker</p>
<h3 id="查看repo中的资源">查看repo中的资源</h3>
<p>helm search repo argo</p>
<h2 id="版本">版本</h2>
<h3 id="自动更新">自动更新</h3>
<p>设置版本号为X</p>
<h2 id="插件">插件</h2>
<h3 id="diff插件">diff插件</h3>
<pre><code>安装指导文档
https://www.coderdocument.com/docs/helm/v2/using_helm/plugins.html
</code></pre>
<pre><code>插件安装
https://github.com/databus23/helm-diff
下载的包
https://github.com/databus23/helm-diff/releases/latest/download/helm-diff-linux-amd64.tgz
</code></pre>
<h2 id="下载chart">下载Chart</h2>
<pre><code>https://github.com/bitnami/charts/tree/main/bitnami
</code></pre>
<h2 id="helm部署资源">Helm部署资源</h2>
<h3 id="部署prometheus-operator">部署prometheus-operator</h3>
<pre><code>kubectl create ns monitoring
https://github.com/prometheus-community/helm-charts/releases
helm install prometheus-operator kube-prometheus-stack-43.2.1.tgz -n monitoring
</code></pre>
<p>修改grafana服务类型</p>
<pre><code>方案一：
kubectl edit deploy prometheus-operator-grafana -n monitoring
直接修改：type: NodePort
方案二：
kube-prometheus-stack/charts/grafana/values.yaml
直接修改：type: NodePort
</code></pre>
<p>查看grafana密码并使用base64解密</p>
<pre><code>kubectl get secrets prometheus-operator-grafana -o yaml -n monitoring
</code></pre>
<p>参考文档</p>
<pre><code>安装文档
https://www.cnblogs.com/zhangpeiyao/p/16529935.html
补充文档
https://www.jianshu.com/p/02105a446072
https://zhuanlan.zhihu.com/p/588941681
报错参考和查看grafana密码
https://www.cnblogs.com/liruilong/p/15808679.html

</code></pre>
<p>排错</p>
<p>prometheus-node-exporter起不来问题</p>
<pre><code>https://github.com/kubesphere/kubesphere/issues/4653
hostRootFsMount:
  enabled: false
</code></pre>
<p>配置minio</p>
<pre><code>https://blog.csdn.net/u010533742/article/details/124469124
</code></pre>
<h3 id="部署awx">部署awx</h3>
<pre><code>https://github.com/ansible/awx-operator#helm-install-on-existing-cluster
</code></pre>
<pre><code>参考文档
https://developer.aliyun.com/article/1050885?accounttraceid=9f8b51b7e7074a3a9029d4856d76a36eeqys
</code></pre>
<p>排错，pgsql链接问题，密码不正确额</p>
<pre><code>https://stackoverflow.com/questions/71327259/kubernetes-awx-operator-hanging-on-managed-database-migration
awx-manage migrate --noinput
正确解决方案
https://github.com/ansible/awx-operator/issues/142
由于重复部署，pvc挂载没有删除，导致使用了原先的pvc中挂载的pgsql用户密码
issue resolved, there has been an old pvc still around. after removing it things work as expected
</code></pre>
<p>删除原先的pvc</p>
<pre><code>kubectl delete pvc postgres-13-awx-postgres-13-0 -n awx
</code></pre>
<h3 id="部署harbor">部署harbor</h3>
<figure data-type="image" tabindex="1"><img src="https://picgo-1258172409.cos.ap-guangzhou.myqcloud.com/image/Helm.md/image-20230104200606390.png" alt="image-20230104200606390" loading="lazy"></figure>
<p>本地添加harbor的helm源</p>
<pre><code>helm repo add --username=admin --password=Harbor12345 myrepo http://127.0.0.1:30002/harbor/projects/2/helm-charts
</code></pre>
<h3 id="部署traefik">部署traefik</h3>
<pre><code>https://doc.traefik.io/traefik/getting-started/install-traefik/#use-the-helm-chart
</code></pre>
<pre><code>helm install traefik traefik/ -n traefik
kubectl port-forward $(kubectl get pods --selector &quot;app.kubernetes.io/name=traefik&quot; --output=name -n traefik) 9000:9000 -n traefik
kubectl port-forward $(kubectl get pods --selector &quot;app.kubernetes.io/name=traefik&quot; --output=name) 9000:9000 &amp;
</code></pre>
<pre><code>#使用文档
尽量保持traefik原生的配置，文档中只截取whoami的配置即可。
https://doc.traefik.io/traefik/getting-started/quick-start-with-kubernetes/
</code></pre>
<h3 id="部署chartmuseum">部署chartmuseum</h3>
<pre><code>https://blog.csdn.net/m0_47406832/article/details/127007708
https://chartmuseum.com/docs/
https://github.com/chartmuseum/charts/tree/main/src/chartmuseum
</code></pre>
<p>注意需要先开启api</p>
<pre><code>env.open.DISABLE_API=false
</code></pre>
<p>上传</p>
<pre><code>helm package mychart/ --version 0.1.1
curl --data-binary &quot;@chartmuseum-3.9.2.tgz&quot; http://127.0.0.1:8080/api/charts
</code></pre>
]]></summary>
        <content type="html"><![CDATA[<h2 id="安装helm">安装Helm</h2>
<h3 id="安装kubectl">安装kubectl</h3>
<p>下载kubectl工具</p>
<pre><code class="language-shell">curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.18.4/bin/linux/amd64/kubectl
</code></pre>
<p>安装kubectl工具</p>
<pre><code class="language-shell">chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl
kubectl version
</code></pre>
<p>配置 Kubeconfig</p>
<pre><code class="language-shell">将kubeconfig配置保存到~/.kube/config
export KUBECONFIG=~/.kube/config
kubectl config get-contexts
kubectl get node
</code></pre>
<p>安装helm</p>
<pre><code>https://helm.sh/docs/intro/install/
mv helm /usr/local/bin/helm
</code></pre>
<p>测试helm</p>
<pre><code class="language-shell">helm list
</code></pre>
<h2 id="基础使用">基础使用</h2>
<pre><code>实用命令操作参考文档
https://www.cnblogs.com/hahaha111122222/p/16113138.html
</code></pre>
<pre><code class="language-shell">helm install my-spinnaker opsmx/spinnaker -n spinnaker -f values.yaml 

helm fetch stable/nfs-client-provisioner

helm install nfs-client-provisioner nfs-client-provisioner-1.2.11.tgz
#搜索仓库所有charts
helm search repo argo
#拉取chart
helm pull argo/argo-cd
#指定版本
helm install adwerx/awx --version 1.0.0

#卸载并保留一些数据
helm uninstall harbor -n harbor --keep-history
</code></pre>
<h3 id="更新spinnaker">更新spinnaker</h3>
<p>helm upgrade --values values.yaml --install my-spinnaker opsmx/spinnaker -n spinnaker</p>
<h3 id="删除spinnaker">删除spinnaker</h3>
<p>helm delete --purge my-spinnaker</p>
<h3 id="查看repo中的资源">查看repo中的资源</h3>
<p>helm search repo argo</p>
<h2 id="版本">版本</h2>
<h3 id="自动更新">自动更新</h3>
<p>设置版本号为X</p>
<h2 id="插件">插件</h2>
<h3 id="diff插件">diff插件</h3>
<pre><code>安装指导文档
https://www.coderdocument.com/docs/helm/v2/using_helm/plugins.html
</code></pre>
<pre><code>插件安装
https://github.com/databus23/helm-diff
下载的包
https://github.com/databus23/helm-diff/releases/latest/download/helm-diff-linux-amd64.tgz
</code></pre>
<h2 id="下载chart">下载Chart</h2>
<pre><code>https://github.com/bitnami/charts/tree/main/bitnami
</code></pre>
<h2 id="helm部署资源">Helm部署资源</h2>
<h3 id="部署prometheus-operator">部署prometheus-operator</h3>
<pre><code>kubectl create ns monitoring
https://github.com/prometheus-community/helm-charts/releases
helm install prometheus-operator kube-prometheus-stack-43.2.1.tgz -n monitoring
</code></pre>
<p>修改grafana服务类型</p>
<pre><code>方案一：
kubectl edit deploy prometheus-operator-grafana -n monitoring
直接修改：type: NodePort
方案二：
kube-prometheus-stack/charts/grafana/values.yaml
直接修改：type: NodePort
</code></pre>
<p>查看grafana密码并使用base64解密</p>
<pre><code>kubectl get secrets prometheus-operator-grafana -o yaml -n monitoring
</code></pre>
<p>参考文档</p>
<pre><code>安装文档
https://www.cnblogs.com/zhangpeiyao/p/16529935.html
补充文档
https://www.jianshu.com/p/02105a446072
https://zhuanlan.zhihu.com/p/588941681
报错参考和查看grafana密码
https://www.cnblogs.com/liruilong/p/15808679.html

</code></pre>
<p>排错</p>
<p>prometheus-node-exporter起不来问题</p>
<pre><code>https://github.com/kubesphere/kubesphere/issues/4653
hostRootFsMount:
  enabled: false
</code></pre>
<p>配置minio</p>
<pre><code>https://blog.csdn.net/u010533742/article/details/124469124
</code></pre>
<h3 id="部署awx">部署awx</h3>
<pre><code>https://github.com/ansible/awx-operator#helm-install-on-existing-cluster
</code></pre>
<pre><code>参考文档
https://developer.aliyun.com/article/1050885?accounttraceid=9f8b51b7e7074a3a9029d4856d76a36eeqys
</code></pre>
<p>排错，pgsql链接问题，密码不正确额</p>
<pre><code>https://stackoverflow.com/questions/71327259/kubernetes-awx-operator-hanging-on-managed-database-migration
awx-manage migrate --noinput
正确解决方案
https://github.com/ansible/awx-operator/issues/142
由于重复部署，pvc挂载没有删除，导致使用了原先的pvc中挂载的pgsql用户密码
issue resolved, there has been an old pvc still around. after removing it things work as expected
</code></pre>
<p>删除原先的pvc</p>
<pre><code>kubectl delete pvc postgres-13-awx-postgres-13-0 -n awx
</code></pre>
<h3 id="部署harbor">部署harbor</h3>
<figure data-type="image" tabindex="1"><img src="https://picgo-1258172409.cos.ap-guangzhou.myqcloud.com/image/Helm.md/image-20230104200606390.png" alt="image-20230104200606390" loading="lazy"></figure>
<p>本地添加harbor的helm源</p>
<pre><code>helm repo add --username=admin --password=Harbor12345 myrepo http://127.0.0.1:30002/harbor/projects/2/helm-charts
</code></pre>
<h3 id="部署traefik">部署traefik</h3>
<pre><code>https://doc.traefik.io/traefik/getting-started/install-traefik/#use-the-helm-chart
</code></pre>
<pre><code>helm install traefik traefik/ -n traefik
kubectl port-forward $(kubectl get pods --selector &quot;app.kubernetes.io/name=traefik&quot; --output=name -n traefik) 9000:9000 -n traefik
kubectl port-forward $(kubectl get pods --selector &quot;app.kubernetes.io/name=traefik&quot; --output=name) 9000:9000 &amp;
</code></pre>
<pre><code>#使用文档
尽量保持traefik原生的配置，文档中只截取whoami的配置即可。
https://doc.traefik.io/traefik/getting-started/quick-start-with-kubernetes/
</code></pre>
<h3 id="部署chartmuseum">部署chartmuseum</h3>
<pre><code>https://blog.csdn.net/m0_47406832/article/details/127007708
https://chartmuseum.com/docs/
https://github.com/chartmuseum/charts/tree/main/src/chartmuseum
</code></pre>
<p>注意需要先开启api</p>
<pre><code>env.open.DISABLE_API=false
</code></pre>
<p>上传</p>
<pre><code>helm package mychart/ --version 0.1.1
curl --data-binary &quot;@chartmuseum-3.9.2.tgz&quot; http://127.0.0.1:8080/api/charts
</code></pre>
<!-- more -->
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Hello Gridea]]></title>
        <id>https://kuangzhilu.github.io/post/hello-gridea/</id>
        <link href="https://kuangzhilu.github.io/post/hello-gridea/">
        </link>
        <updated>2018-12-11T16:00:00.000Z</updated>
        <summary type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
]]></summary>
        <content type="html"><![CDATA[<p>👏  欢迎使用 <strong>Gridea</strong> ！<br>
✍️  <strong>Gridea</strong> 一个静态博客写作客户端。你可以用它来记录你的生活、心情、知识、笔记、创意... ...</p>
<!-- more -->
<p><a href="https://github.com/getgridea/gridea">Github</a><br>
<a href="https://gridea.dev/">Gridea 主页</a><br>
<a href="https://fehey.com/">示例网站</a></p>
<h2 id="特性">特性👇</h2>
<p>📝  你可以使用最酷的 <strong>Markdown</strong> 语法，进行快速创作</p>
<p>🌉  你可以给文章配上精美的封面图和在文章任意位置插入图片</p>
<p>🏷️  你可以对文章进行标签分组</p>
<p>📋  你可以自定义菜单，甚至可以创建外部链接菜单</p>
<p>💻  你可以在 <strong>Windows</strong>，<strong>MacOS</strong> 或 <strong>Linux</strong> 设备上使用此客户端</p>
<p>🌎  你可以使用 <strong>𝖦𝗂𝗍𝗁𝗎𝖻 𝖯𝖺𝗀𝖾𝗌</strong> 或 <strong>Coding Pages</strong> 向世界展示，未来将支持更多平台</p>
<p>💬  你可以进行简单的配置，接入 <a href="https://github.com/gitalk/gitalk">Gitalk</a> 或 <a href="https://github.com/SukkaW/DisqusJS">DisqusJS</a> 评论系统</p>
<p>🇬🇧  你可以使用<strong>中文简体</strong>或<strong>英语</strong></p>
<p>🌁  你可以任意使用应用内默认主题或任意第三方主题，强大的主题自定义能力</p>
<p>🖥  你可以自定义源文件夹，利用 OneDrive、百度网盘、iCloud、Dropbox 等进行多设备同步</p>
<p>🌱 当然 <strong>Gridea</strong> 还很年轻，有很多不足，但请相信，它会不停向前 🏃</p>
<p>未来，它一定会成为你离不开的伙伴</p>
<p>尽情发挥你的才华吧！</p>
<p>😘 Enjoy~</p>
]]></content>
    </entry>
</feed>